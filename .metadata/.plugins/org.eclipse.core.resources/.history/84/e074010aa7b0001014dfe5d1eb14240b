package com.smhrd.model;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

import com.smhrd.db.MySqlSessionManager;

public class MemberDAO {
	// DB에 연결하기 위한 기본적인 작업을(SqlSessionFactory, sqlSession)을 
	// 수행할수 있는 클래스!
	// WEB_MEMBER 테이블을 사용하여 작업할수 있는 모든 기능을
	// => WEB_MEMBER 테이블의 작업!
	// : 회원 가입, 로그인, 회원정보 수정, 회원 탈퇴, 회원의 목록 조회, ...
	
	//필드영역
	//DBCP를 만드는 공장을 꺼내오기
	private SqlSessionFactory factory = MySqlSessionManager.getFactory();
    Connection conn = null;
    PreparedStatement psmt = null;
    ResultSet rs = null;
    public Connection getConn() {
        Connection conn = null;
        try {
            // DB 연결정보 (너희 DB에 맞게 수정)
            String url = "jdbc:oracle:thin:@localhost:1521:xe";
            String user = "hr";         // DB 사용자명
            String password = "hr";     // DB 비밀번호
            Class.forName("oracle.jdbc.driver.OracleDriver");
            conn = DriverManager.getConnection(url, user, password);
        } catch (Exception e) {
            e.printStackTrace();
        }
        return conn;
    }

    // 연결 닫는 메서드
    public void close() {
        try {
            if (rs != null) rs.close();
            if (psmt != null) psmt.close();
            if (conn != null) conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
	
	
	
	public int join(MemberVO mvo) {
		// 1. Connection 객체 (SqlSession)를 빌려오기
		SqlSession sqlSeesion = factory.openSession(true);
		
		// 2. 사용하기
		// sqlSeesion.insert("sql 구문의 id값", Mapper.xml 파일에 전달해야하는 데이터);
		int row = sqlSeesion.insert("join", mvo);
		
		// 3. 반납하기
		sqlSeesion.close();
		// 4. 결과값을 리턴하기
		return row;
		
		
		
		
		
		// DB에 대한 Mapper.xml 파일 연결!
		// => Mapper.xml => insert sql 구문 작업!
	}





	public MemberVO login(MemberVO vo) {
		SqlSession sqlSeesion = factory.openSession();
		MemberVO result = null;
		
		result = sqlSeesion.selectOne("login", vo);

		
		return result;
		
		
	}





	public List<MemberVO> selectAll() {
		SqlSession sqlSeesion = factory.openSession();
		
		List<MemberVO> memberList = sqlSeesion.selectList("selectAll");

		return memberList;
	}





	// com.smhrd.model.MemberDAO
	public int updateMember(MemberVO vo) {
	    int cnt = 0;
	    try {
	        conn = getConn();
	        String sql = "UPDATE WEB_MEMBER SET PW=?, TEL=?, ADDRESS=? WHERE EMAIL=?";
	        psmt = conn.prepareStatement(sql);
	        psmt.setString(1, vo.getPw());
	        psmt.setString(2, vo.getTel());
	        psmt.setString(3, vo.getAddress());
	        psmt.setString(4, vo.getEmail());
	        cnt = psmt.executeUpdate();
	    } catch (Exception e) {
	        e.printStackTrace();
	    } finally {
	        close();
	    }
	    return cnt;
	}
}







