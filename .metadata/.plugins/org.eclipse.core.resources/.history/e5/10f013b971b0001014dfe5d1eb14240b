package com.smhrd.frontcontroller;

import java.io.IOException;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.smhrd.controller.JoinService;

// 모든 요청이 .do라고 하는 확장자를 가지고 있다면
// 다 가져올 수 있는 URL Mapping 
@WebServlet("*.do")
public class FrontController extends HttpServlet {

   // FrontController : 단 한개의 Servlet을 사용하여, 모든 요청과 응답을 처리하는 패턴!

   private static final long serialVersionUID = 1L;

   protected void service(HttpServletRequest request, HttpServletResponse response)
         throws ServletException, IOException {

      // 1. FrontController에 들어온 요청이 어떤 요청인지 파악

      // 실행되는 uri 주소 가져오기
      String uri = request.getRequestURI();
      System.out.println(uri);

      // 프로젝트 경로 가져오기
      String path = request.getContextPath();
      System.out.println(path);

      // uri 경로에서 path에 대한 경로를 삭제
      // /MeesageSystem_FrontCon + /
      // -> /Login.do

      // uri-path를 할건데 uri 에서 substring 기능을 활용해서path.length +1만큼 빼서 Login.do 빼올거임
      String finalUri = uri.substring(path.length() + 1);
      System.out.println(finalUri);

      // 중복 되는 코드들을 한번에 처리
      // 요청 객체에 대한 인코딩 작업!
      request.setCharacterEncoding("UTF-8");
      String moveUrl = "";

      // 요청별에 따른 기능 연결
      if (finalUri.equals("Join.do")) {
         // 해당 기능을 수행하기 위한 클래스 접근
         JoinService join = new JoinService();
         moveUrl = join.execute(request, response);
         // 페이지 경로 이동
         // 1. join_success.jsp --> forward 방식 이동
         
         
         // 2. redirect:/main.jsp --> redirect방식 이동
      }
      
      if (moveUrl.equals("redirect:/")) {
         response.sendRedirect(moveUrl);
      } else {

      }

   }

}
