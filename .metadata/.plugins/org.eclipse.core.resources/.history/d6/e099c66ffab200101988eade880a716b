package com.smhrd.model;

import java.util.List;

import org.apache.ibatis.session.SqlSession;
import org.apache.ibatis.session.SqlSessionFactory;

import com.smhrd.db.MySqlSessionManager;

public class MemberDAO {
	// DB에 연결하기 위한 기본적인 작업을(SqlSessionFactory, sqlSession)을 
	// 수행할수 있는 클래스!
	// WEB_MEMBER 테이블을 사용하여 작업할수 있는 모든 기능을
	// => WEB_MEMBER 테이블의 작업!
	// : 회원 가입, 로그인, 회원정보 수정, 회원 탈퇴, 회원의 목록 조회, ...
	
	//필드영역
	//DBCP를 만드는 공장을 꺼내오기
	private SqlSessionFactory factory = MySqlSessionManager.getFactory();
	
	
	
	
	
	public int join(MemberVO mvo) {
		// 1. Connection 객체 (SqlSession)를 빌려오기
		SqlSession sqlSeesion = factory.openSession(true);
		
		// 2. 사용하기
		// sqlSeesion.insert("sql 구문의 id값", Mapper.xml 파일에 전달해야하는 데이터);
		int row = sqlSeesion.insert("join", mvo);
		
		// 3. 반납하기
		sqlSeesion.close();
		// 4. 결과값을 리턴하기
		return row;
		
		
		
		
		
		// DB에 대한 Mapper.xml 파일 연결!
		// => Mapper.xml => insert sql 구문 작업!
	}





	public MemberVO login(MemberVO vo) {
		SqlSession sqlSeesion = factory.openSession();
		MemberVO result = null;
		result = sqlSeesion.selectOne("login", vo);
		return result;
		
		
	}





	public List<MemberVO> selectAll() {
		SqlSession sqlSeesion = factory.openSession();
		List<MemberVO> memberList = sqlSeesion.selectList("selectAll");
		return memberList;
	}

	public int update(MemberVO mvo) {
		//1 세션 빌려오기
		SqlSession sqlSeesion = factory.openSession();
		//2세션 사용하기
		int row = sqlSeesion.update("update", mvo);
		//3 반납
		sqlSeesion.close();
		//4 반환
		
		return row;
	}



	public void check() {
		// TODO Auto-generated method stub
		
	}
}








